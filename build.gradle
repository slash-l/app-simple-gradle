apply plugin: 'java'
apply plugin: 'maven-publish'

// 如果构建脚本需要使用外部库，可以将它们添加到 script’s classpath 本身的脚本类路径中。
// 你可以使用 buildscript() 方法，传入一个声明构建脚本类路径的块。
buildscript {
    repositories {
        maven {
            url 'https://demo.jfrogchina.com:443/artifactory/slash-gradle-virtual'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }

    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}
dependencies {
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.24'
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
}

version = currentVersion

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'slash-gradle-dev-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
            //publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
        }
    }
    resolve {
        repository {
            repoKey = 'slash-gradle-virtual'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
    }

    clientConfig.setIncludeEnvVars(true)
    clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new java.util.Date().toString())

}